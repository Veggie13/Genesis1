#ifndef SOUNDBOARDLAYOUT_QOH
#define SOUNDBOARDLAYOUT_QOH

#include <QVector>

#include "SoundboardUi.h"


class I_ImportTarget;
class InstantCtrlButton;
class ResizeTableDlg;
class Soundboard;
class SoundboardInstance;
class State;

class SoundboardLayout : public QObject, public Ui::SoundboardUi
{
    Q_OBJECT

public:
    SoundboardLayout(QObject* parent=NULL);
    virtual ~SoundboardLayout();
    void setupUiWithButtons(QWidget* w);

public slots:
    void Associate(State* state);

    void Resize(int rows, int cols);
    void AssignSoundToButton(int row, int col, SoundboardInstance* sound);

signals:
    void SoundRemoved(int row, int col);
    void SoundRequested(I_ImportTarget* target);
    void SpecificSoundRequested(int row, int col, SoundboardInstance* sound);
    void SizeChanged(int rows, int cols);
    void VolumeChanged(int vol);
    void SwapInitiated();
    void SwapCompleted();

private slots:
    void InitiateSwap(int row, int col);
    void CompleteSwap(int row, int col);
    void RequestSound(int row, int col);
    void OnSoundboardDestroyed();

private:
    void Associate(Soundboard* sndboard);


    typedef QVector<InstantCtrlButton*> ButtonRow;
    typedef QVector<ButtonRow> ButtonTable;
    ButtonTable m_buttons;

    ResizeTableDlg* m_resizeDlg;

    Soundboard* m_curBoard;

    int m_swapRow;
    int m_swapCol;

    QWidget* m_this;

};

#endif
