#ifndef A_SOUNDIMPORT_QOH
#define A_SOUNDIMPORT_QOH

#include <QObject>

#include "I_TitleCarrier.h"


namespace BASS { class Channel; }
class QTimer;

class A_SoundImport : public QObject, public I_TitleCarrier
{
    Q_OBJECT

public:
    static const int VOLUME_MAX;
    enum PlayState {STOPPED, PLAYING, PAUSED};


    A_SoundImport(const QString& title, const QString& filename, QObject* parent=NULL);
    virtual ~A_SoundImport();

    virtual const QString& Title();
    void SetTitle(const QString& newTitle);

    const QString& Filename();
    void ReimportFrom(const QString& newFilename);

    void Play(bool restart=false, bool loop=false);
    void SetPaused(bool pause);
    void Stop();
    void SetVolume(int volume);

    PlayState GetPlayState();
    double Length();

signals:
    void SoundFinished();
    void Modified();
    void AboutToDie();
    void Renamed(const QString& oldTitle, const QString& newTitle);
    void Reimported(const QString& oldFilename, const QString& newFilename);

protected:
    BASS::Channel* GetChannel();
    void SetChannel(BASS::Channel* newChannel);

    void Initialize();
    virtual void Import() = 0;

private slots:
    void CheckCompletion();

private:
    void SetChannelVolume();
    void SetChannelPause(bool restart);

    QString m_title;
    QString m_filename;
    BASS::Channel* m_channel;

    bool m_paused;
    int m_volume;
    PlayState m_playState;

    QTimer* m_timer;

    bool m_initialized;
    int m_looping;


    static const int INTERVAL;

};

#endif
